name: Release

on:
  pull_request:
    types: ["opened", "synchronize"]
  push:
    branches:
    - main

permissions:
  contents: write
  pull-requests: write

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - uses: google-github-actions/release-please-action@v3
        id: tag_release
        with:
          command: manifest
          token: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      release_created: ${{ steps.tag_release.outputs.release_created }}
      tag_name: steps.tag_release.outputs.tag_name


  goreleaser:
    runs-on: ubuntu-latest
    needs: tag
    if: ${{ needs.tag.outputs.release_created }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Setup Golang
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: './datasourcerer/go.mod'
          cache: true

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@f82d6c1c344bcacabba2c841718984797f664a6b # v4.2.0
        id: goreleaser
        with:
          workdir: ./datasourcerer/
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
